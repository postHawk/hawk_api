var HAWK_API={ws:{socket:null,open:!1},settings:{url:null,user_id:!1,encryption:{enabled:!1,salt:"a3453fsdf564l546asdff6mas,.fma.S<Dfm"},debug:!1,token:!1},errors2string:{invalid_api_key:"Неверный ключ апи",user_not_register:"Пользователь с таким идентификатором не зарегистрирован в системе",user_not_exists:"Пользователь с таким идентификатором не найден",invalid_format_data:"Неверный фомат данных",invalid_data:"Общая ошибка данных. Ожидался POST-запрос",invalid_login_data:"Не верный логин получателя",send_message_yourself:"Нельзя отправить сообщение самому себе",invalid_login_format:"Неверный формат идентификатора",domain_not_register:"Данный домен не зарегистрирован в системе",user_not_online:"Пользователь не в сети",general_error:"Общая ошибка сервера",invalid_group_format:"Неверный формат идентификатора группы",invalid_group_count:"Группа должна быть не пустым массивом",access_denied_to_group:"Доступ к группе запрещён",invalid_token:"Неверный токен авторизации"},reinitialization:!1,initialized:!1,id_setted:!1,queue:[],in_process:!1,last_error:null,init:function(e){if(!HAWK_API.reinitialization){if(!WebSocket)return this.print_error("Технология не поддерживается"),!1;if(this.settings=$.extend(!0,this.settings,e),"CryptoJS"in window||(this.settings.encryption.enabled=!1,console.warn("Отсутствует CryptoJS. Шифрование не возможно.")),!this.settings.user_id)return this.print_error("необходимо указать user_id"),!1;this.init.bind(this),this.bind_handler.bind(this),this.bind_default_hadler.bind(this),this.send_message.bind(this),this.get_user_id.bind(this),this.check_on_error.bind(this),this.get_url.bind(this),this.bind_handler("hawk.open",function(){HAWK_API.set_user_id()}),this.initialized=!0}return $("#hawk_fix_ssl").size()&&$("#hawk_fix_ssl").remove(),HAWK_API.last_error||HAWK_API.create_socket(HAWK_API.get_url()),!0},create_socket:function(e){this.ws.socket=new WebSocket(e),this.bind_default_hadler("onopen",this.on_open),this.bind_default_hadler("onmessage",this.on_message),this.bind_default_hadler("onclose",this.on_close),this.bind_default_hadler("onerror",this.on_error)},send_message:function(e,t){return"undefined"==typeof t&&(t=!0),this.in_process&&t?void this.queue.push(e):(this.in_process=!0,"object"==typeof e&&(e.from=this.get_user_id(),e.hawk_action=e.action||"send_message",delete e.action,e.domains=e.domains||[document.location.host],this.settings.encryption.enabled&&"undefined"!=typeof CryptoJS&&"undefined"!=typeof CryptoJS.AES&&"undefined"!=typeof CryptoJS.enc.Base64&&e.hasOwnProperty("text")&&""!==e.text&&(e.text=CryptoJS.AES.encrypt(JSON.stringify(e.text),this.settings.encryption.salt,{format:HAWK_API}).toString()),e=JSON.stringify(e)),this.ws.socket.send(e),void $(HAWK_API).trigger("hawk.msg_sended",e))},get_group_list:function(e,t){e=e||[document.location.host],t=t||"get_group_list";var i={id:this.get_user_id(),domains:e,action:"get_group_list",event:t};this.send_message(i)},get_groups_by_user:function(e,t,i){t=t||[document.location.host],i=i||"get_group_by_simple_user",e=e||this.get_user_id();var s={id:e,domains:t,action:"get_group_by_simple_user",event:i};this.send_message(s)},get_users_by_group:function(e,t,i){if(HAWK_API.print_debug(e,t,i),"object"==typeof e&&e.length){t=t||[document.location.host],i=i||"get_by_group";var s={id:this.get_user_id(),domains:t,groups:e,action:"get_by_group",event:i};this.send_message(s)}else this.print_error("Список групп должен быть не пустым массивом")},add_user_to_group:function(e,t,i,s){if(i=i||[document.location.host],s=s||"add_in_groups",t=t||this.get_user_id(),"object"==typeof e&&e.length){var r={id:t,groups:e,domains:i,action:"add_in_groups",event:s};this.send_message(r)}},remove_user_from_group:function(e,t,i,s){if(i=i||[document.location.host],s=s||"remove_from_groups",t=t||this.get_user_id(),"object"==typeof e&&e.length){var r={id:t,groups:e,domains:i,action:"remove_from_groups",event:s};this.send_message(r)}},set_user_id:function(){this.check_user_id(this.settings.user_id)?this.send_message({id:this.settings.user_id,token:this.settings.token}):this.print_error(this.errors2string.invalid_login_format)},check_user_id:function(e){return/^[a-zA-Z\d\_]{3,64}$/.test(e)},get_user_id:function(){return this.settings.user_id},get_url:function(){if(!this.settings.url)throw"Для использования баблиотеки укажите адрес сервера в формате ws://my.domain.com";return this.settings.url},bind_handler:function(e,t){-1===e.search("hawk.")&&(e="hawk."+e),$(this).on(e,t)},bind_default_hadler:function(e,t){"object"==typeof this.ws.socket[e]&&(this.ws.socket[e]=t)},unbind_handler:function(e){-1===e.search("hawk.")&&(e="hawk."+e),$(this).off(e)},unbind_default_handler:function(e){"object"==typeof this.ws.socket[e]&&(this.ws.socket[e]=null)},on_open:function(){HAWK_API.print_debug("open"),HAWK_API.reinitialization=!1,HAWK_API.ws.open=!0,$(HAWK_API).trigger("hawk.open")},on_message:function(e){var t=JSON.parse(e.data);if(HAWK_API.print_debug(t),t.hasOwnProperty("error")&&t.error!==!1)HAWK_API.check_on_error(t.error);else{HAWK_API.settings.encryption.enabled&&"undefined"!=typeof CryptoJS&&"undefined"!=typeof CryptoJS.AES&&"undefined"!=typeof CryptoJS.enc.Base64&&t.hasOwnProperty("text")&&""!==t.text&&(t.text=JSON.parse(CryptoJS.AES.decrypt(t.text,HAWK_API.settings.encryption.salt,{format:HAWK_API}).toString(CryptoJS.enc.Utf8)));var i="hawk.message";t.hasOwnProperty("from")&&"hawk_server"===t.from&&(i="hawk.server_message"),HAWK_API.print_debug(i),$(HAWK_API).trigger(i,[t]),HAWK_API.id_setted||(HAWK_API.id_setted=!0,$(HAWK_API).trigger("hawk.initialized")),t.event&&(-1===t.event.search("hawk.")&&(t.event="hawk."+t.event),$(HAWK_API).trigger(t.event,[t]))}HAWK_API.queue.length?HAWK_API.send_message(HAWK_API.queue.shift(),!1):HAWK_API.in_process=!1},on_close:function(e){HAWK_API.print_debug("close"),1006!==e.code&&1015!==e.code||"https:"!==document.location.protocol?$(HAWK_API).trigger("hawk.close"):HAWK_API.fix_ssl()},on_error:function(){HAWK_API.print_debug("error"),$(HAWK_API).trigger("hawk.socket_error")},check_on_error:function(e){"undefined"!=typeof this.errors2string[e]&&(this.print_error(this.errors2string[e]),$(HAWK_API).trigger("hawk.server_error",[this.errors2string[e]]),HAWK_API.reinitialization=!1,HAWK_API.last_error=this.errors2string[e])},print_error:function(e){console.error(e)},print_debug:function(){if(HAWK_API.settings.debug){var e=new Error,t=e.stack.split("\n").reverse()[0].trim();console.group(t);for(var i in arguments)console.debug(arguments[i]);console.groupEnd()}},stringify:function(e){var t={ct:e.ciphertext.toString(CryptoJS.enc.Base64)};return e.iv&&(t.iv=e.iv.toString()),e.salt&&(t.s=e.salt.toString()),JSON.stringify(t)},parse:function(e){var t=JSON.parse(e),i=CryptoJS.lib.CipherParams.create({ciphertext:CryptoJS.enc.Base64.parse(t.ct)});return t.iv&&(i.iv=CryptoJS.enc.Hex.parse(t.iv)),t.s&&(i.salt=CryptoJS.enc.Hex.parse(t.s)),i},fix_ssl:function(){$("body").append('<iframe id="hawk_fix_ssl" onload="HAWK_API.init()" style="display: none" src="'+HAWK_API.settings.url.replace("wss","https")+'">')}};